name: dansdata-backend

services:
  dance-api:
    build:
      context: ../
      dockerfile: src/app/Dockerfile
      additional_contexts:
        docker-helpers: ./docker-helpers/
    restart: unless-stopped
    networks:
      private:
    environment:
      APP_HOST_FILE: /run/secrets/app-host
    secrets:
      - app-host

  keycloak:
    build:
      context: ./auth/
      dockerfile: Dockerfile
      additional_contexts:
        docker-helpers: ./docker-helpers/
    command:
      - /opt/keycloak/bin/kc.sh
      - start
      - --proxy-headers=xforwarded
      - --http-enabled=true
      - --optimized
    depends_on:
      database:
        condition: service_healthy
    restart: unless-stopped
    networks:
      private:
    environment:
      DB_HOST_FILE: /run/secrets/db-host
      DB_NAME_FILE: /run/secrets/db-name
      KC_DB_USERNAME_FILE: /run/secrets/db-keycloak-user
      KC_DB_PASSWORD_FILE: /run/secrets/db-keycloak-password
      KC_DB_SCHEMA: "keycloak"
      KC_HOSTNAME_FILE: /run/secrets/keycloak-hostname
      KC_HOSTNAME_STRICT_HTTPS: false
      KEYCLOAK_ADMIN_FILE: /run/secrets/keycloak-admin-user
      KEYCLOAK_ADMIN_PASSWORD_FILE: /run/secrets/keycloak-admin-password
    secrets:
      - db-host
      - db-keycloak-user
      - db-keycloak-password
      - db-name
      - keycloak-admin-user
      - keycloak-admin-password
      - keycloak-hostname

  database:
    build:
      context: ../
      dockerfile: src/db/Dockerfile
    restart: unless-stopped
    networks:
      private:
    environment:
      ENVIRONMENT_FILE: /run/secrets/environment
      POSTGRES_USER_FILE: /run/secrets/dbms-owner-user
      POSTGRES_PASSWORD_FILE: /run/secrets/dbms-owner-password
      DB_OWNER_USER_FILE: /run/secrets/db-owner-user
      DB_OWNER_PASSWORD_FILE: /run/secrets/db-owner-password
      DB_APP_AUTH_USER_FILE: /run/secrets/db-app-auth-user
      DB_APP_AUTH_PASSWORD_FILE: /run/secrets/db-app-auth-password
      DB_KEYCLOAK_USER_FILE: /run/secrets/db-keycloak-user
      DB_KEYCLOAK_PASSWORD_FILE: /run/secrets/db-keycloak-password
      DB_NAME_FILE: /run/secrets/db-name
    secrets:
      - environment
      - dbms-owner-user
      - dbms-owner-password
      - db-owner-user
      - db-owner-password
      - db-app-auth-user
      - db-app-auth-password
      - db-keycloak-user
      - db-keycloak-password
      - db-name

  gateway:
    build:
      context: ./gateway/
      dockerfile: Dockerfile
      additional_contexts:
        docker-helpers: ./docker-helpers/
    restart: unless-stopped
    networks:
      private:
    cap_add:
      - NET_ADMIN
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - /data/caddy:/data
      - caddy-config:/config
    environment:
      GATEWAY_HOST_FILE: /run/secrets/gateway-host
      APP_HOST_FILE: /run/secrets/app-host
    secrets:
      - gateway-host
      - app-host

  # Provides access to internal services
  # from external source.
  # Note: unusable from docker host!
  # Docker host can access services via their IP.
  vpn:
    image: linuxserver/wireguard:latest
    restart: unless-stopped
    networks:
      private:
    cap_add:
      - NET_ADMIN
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    volumes:
      - vpn-config:/config
    ports:
      - 51820:51820/udp
    environment:
      PUID: 1000
      PGID: 1000
      TZ: Etc/UTC
      SERVERURL: auto
      SERVERPORT: 51820
      PEERS: 1
      INTERNAL_SUBNET: 10.243.1.0
      ALLOWEDIPS: 10.243.0.0/22
      LOG_CONFS: false

networks:
  private:
    ipam:
      config:
        - subnet: 10.243.0.0/22
          ip_range: 10.243.0.0/24
          gateway: 10.243.0.255

volumes:
  caddy-config:
  vpn-config:

secrets:
  environment:
    environment: ENVIRONMENT
  app-host:
    environment: APP_HOST
  dbms-owner-user:
    environment: DBMS_OWNER_USER
  dbms-owner-password:
    environment: DBMS_OWNER_PASSWORD
  db-owner-user:
    environment: DB_OWNER_USER
  db-owner-password:
    environment: DB_OWNER_PASSWORD
  db-app-auth-user:
    environment: DB_APP_AUTH_USER
  db-app-auth-password:
    environment: DB_APP_AUTH_PASSWORD
  db-host:
    environment: DB_HOST
  db-keycloak-user:
    environment: DB_KEYCLOAK_USER
  db-keycloak-password:
    environment: DB_KEYCLOAK_PASSWORD
  db-name:
    environment: DB_NAME
  gateway-host:
    environment: GATEWAY_HOST
  keycloak-admin-user:
    environment: KEYCLOAK_ADMIN_USER
  keycloak-admin-password:
    environment: KEYCLOAK_ADMIN_PASSWORD
  keycloak-hostname:
    environment: KC_HOSTNAME
